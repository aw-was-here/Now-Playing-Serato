# This workflow file generates binaries for both Windows
# and OS X.  However, https://github.com/actions/upload-artifact/issues/38
# that basically says that it won't ever preserve permissions.
# That means an archive in an archive since we need to preserve them
# on OS X.  Still... better than doing this all by hand.

---

name: pyinstaller

on: [push, pull_request]  # yamllint disable-line rule:truthy

jobs:
  pyinstaller-mac:
    runs-on: macos-10.15
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: install dependencies
        run: |
          python3 -m venv /tmp/venv
          source /tmp/venv/bin/activate
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: generate version
        shell: bash
        run: ./generate_version.sh
      - name: pyinstaller
        run: |
          cp resources/NowPlaying_MAC.spec .
          /tmp/venv/bin/pyinstaller -w NowPlaying_MAC.spec
      - name: manipulate the dist
        run: |
          cp -p CHANGELOG* README* LICENSE.txt NOTICE.txt dist
          cd dist
          rm -rf NowPLaying
          zip -r NowPlaying.zip .
      - name: artifact dist
        uses: actions/upload-artifact@v2
        with:
          name: mac-dist
          path: dist/NowPlaying.zip

  pyinstaller-win:
    runs-on: windows-2019
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: update tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: generate version
        shell: bash
        run: ./generate_version.sh
      - name: pyinstaller
        run: |
          copy resources\\NowPlaying_WIN.spec .
          pyinstaller -F -w NowPlaying_WIN.spec
          copy CHANGELOG*.* dist
          copy README*.* dist
          copy LICENSE.txt dist\\LICENSE.txt
          copy NOTICE.txt dist\\NOTICE.txt
      - name: artifact dist
        uses: actions/upload-artifact@v2
        with:
          name: win-dist
          path: dist\\
